spring.sql.init.mode=always

# spring.config.activate.on-profile=ci,test
spring.datasource.url=jdbc:h2:file:./db/${db.name}
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# spring.config.activate.on-profile=dev
# jdbc.driverClassName=org.postgresql.Driver
# jdbc.url=jdbc:postgresql://localhost:5432/${db.name}
# jdbc.username=later
# jdbc.password=iamroot

db.name=later

hibernate.dialect=org.hibernate.dialect.H2Dialect
hibernate.show_sql=true
logging.level.org.hibernate.SQL=DEBUG

# настройка автоматического создания таблиц при помощи sql-скрипта
# javax.persistence.schema-generation.database.action=create
# javax.persistence.schema-generation.create-script-source=schema.sql

# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
  # drop-and-create

# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=AutoSchema.sql
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

# spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=AutoSchema.sql
# spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-source=metadata
