/*
drop table if exists item_notes, items, tags, users CASCADE ;


create table item_notes (
 id bigint generated by default as identity,
  note_date timestamp,
   text varchar(2000),
    item_id bigint, primary key (id)
);

create table items (
 id bigint generated by default as identity,
  owner_id bigint,
   url varchar(1000),
    primary key (id)
);

create table tags (
 item_id bigint not null,
  name varchar(63)
);

create table users (
 id bigint generated by default as identity,
  email varchar(255),
   first_name varchar(63) not null,
    last_name varchar(63),
     password varchar(63),
      registration_date timestamp,
       state varchar(63),
        primary key (id)
);

alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email);

alter table item_notes add constraint FKpwe6obppskjyh8rmxni1obrbh foreign key (item_id) references items on delete cascade;
alter table items add constraint FKe37yi0i6rmaqcqickvb1vty22 foreign key (owner_id) references users on delete cascade;
alter table tags add constraint FKs5i8nws6q9to84v4mmn1xsmn5 foreign key (item_id) references items;

*/


/*
CREATE TABLE IF NOT EXISTS users (
 id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  email varchar(320),
   first_name varchar(100),
    last_name varchar(100),
     registration_date timestamp,
      state varchar(50)
);

CREATE TABLE IF NOT EXISTS items (
 id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  user_id BIGINT,
   url VARCHAR(1000),
   resolved_url VARCHAR(1000),
    mime_type VARCHAR(100),
     title VARCHAR(255),
      has_image BOOLEAN,
       has_video BOOLEAN,
        unread BOOLEAN,
         date_resolved TIMESTAMP WITHOUT TIME ZONE,
          CONSTRAINT fk_items_to_users FOREIGN KEY(user_id) REFERENCES users(id),
           UNIQUE(user_id, resolved_url)
);

CREATE TABLE IF NOT EXISTS tags (
 id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  item_id BIGINT,
   name VARCHAR(50),
    CONSTRAINT fk_tags_to_items FOREIGN KEY(item_id) REFERENCES items(id)
);

CREATE TABLE IF NOT EXISTS item_notes (
 id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  item_id BIGINT,
   text VARCHAR(1000),
    note_date timestamp,
     CONSTRAINT items FOREIGN KEY(item_id) REFERENCES items(id)
);
*/